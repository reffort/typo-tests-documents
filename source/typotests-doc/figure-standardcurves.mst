.\"
.\" Standard curves graph
.\"

.Begin Figure float no group yes
.EQ
delim $$
gsize 9
.EN
.
.ti +0
.ps 10
.G1
# The word space boundaries alter the penalty curve
# Adjust as desired
wslwr = 0.667		# 0.667
wsupr = 1.5		# 1.5
normalizedfc = 1	# 0 | 1
thresh1 = 10/12	#0.8333	# lower decent class threshold if not normalized
thresh2 = 1.25		# upper decent class threshold if not normalized

# hyphenation
hypp = 0

#

.ps 9
.vs 9p
frame ht 4.9 wid 3.76 invis    # 28P
# frame ht 4.75 wid 3.63 invis # 27P
# frame ht 4.75 wid 3.5 invis
coord x 0.55, 1.65 y -1.0, 2.7
xmin = 0.55
xmax = 1.65
ymax = 2.7
ymin = -1.0
ticks left from 0.5 to 2.5 by 0.5 ""
ticks left out 0.0375 from 0.0 to 2.5 by 0.1 ""
ticks bot off
line from xmin, 0 to xmax, 0
line from xmax, 0 to xmax, ymax
line from xmax, ymax to xmin, ymax
line from xmin, ymax to xmin, 0

# label the tick marks in user values
for yy = 50 to 250 by 50 do {
  sprintf ("%.0f", yy) rjust at 0.5, yy / 100
}

# left edge of the table grid
lmin = 0.29 # 0.31

# center the y label
"\fI\s10t  \s0\fP" at lmin + (xmin - lmin) * 0.33, ymax / 2

# grid at the bottom

line from xmax, 0 to xmax, ymin
line from xmax, ymin to lmin, ymin
line from lmin, ymin to lmin, 0
line from xmin, ymin to xmin, 0

# horiz. grid lines
for i from 0 to 1 by 0.2 do {
	line from lmin, -i to xmax, -i
#	line from xmin, -i to xmax, -i
}

# left edge of row labels
tstart = lmin + 0.01

# set the window

# wslwr = 0.667 #0.75 #2/3 # 0.75
# wsupr = 1.5 # 1.4 # 1.5 # 1.4

# minlwr and wsupr

line from wslwr, 0 to wslwr, 1.6 dashed 0.025
line from wsupr, 0 to wsupr, 1.6 dashed 0.025
sprintf ("\fIwsupr\fP = %.1f%% ", wsupr * 100) size 8 rjust below at wsupr, 1.6
sprintf (" \fIwslwr\fP = %.1f%%", wslwr * 100) size 8 ljust below at wslwr, 1.6


# line between good and bad

line dashed 0.025 from xmin, 1 to xmax, 1
"``Good''" size 8 at (wslwr+wsupr)/2, 0.94
"``Bad''"  size 8 at (xmin+wslwr)/2-0.005, 1.05
"``Bad''"  size 8 at (xmax+wsupr)/2-0.01, 1.05

# hyphenation penalty

if (hypp > 0) then {
	line dotted 0.1 from xmin + 0.01, hypp1 to xmax, hypp
	" @i[hypp]@-[1]" size 8 ljust at xmin + 0.01, hypp + 0.05
}

# draw the curves

draw lin dotted 0.06	# linear
draw qc dotted		# quadratic
draw cc dashed 0.02	# cubic
draw tc solid		# tex
draw oc1 dotted 0.02	# quartic
draw nc1 dashed 0.01	# quintic
draw nc2 dashed 0.01	# quintic
draw hc dashed 0.01	# heirloom
draw c7 dotted 0.02
draw c8 dotted 0.02
draw c9 dotted 0.02
#draw tc0 dashed 0.02

yclip = 2.6
for j from 0.55 to 1.65 by 0.01 do {
	if (j < 1.0) then { i = (1 - j) / (1.0 - wslwr) } else { i = (j - 1) / (wsupr - 1.0) }
#
#	yval = i
#	if (yval < yclip) then { next lin at j, yval }
#
	yval = i^2
	if (yval < yclip) then { next qc at j, yval }
#
	yval = i^3
	if (yval < yclip) then { next cc at j, yval }
#
	yval = i^4
	if (yval < yclip) then { next oc1 at j, yval }
#
#	yval = i^5
#	if (yval < yclip) then { next nc1 at j, yval }
#		if (j < wslwr) then { next nc1 at j, yval }
#		if (j > wsupr) then { next nc2 at j, yval }
#
#	yval = (1+(100*i^3)^2)/10000
#
	yval = i^6
	if (yval < yclip) then { next tc at j, yval }
#
#	yval = i^7
#	if (yval < yclip) then { next c7 at j, yval }
#
#	yval = i^8
#	if (yval < yclip) then { next c8 at j, yval }
#
	yval = i^9
	if (yval < yclip) then {
		next c9 at j, yval
		circle at j, yval radius 0.01
	}
#
#	yval = (1+(100*i^3+10)^2)/10000
#	if (yval < yclip) then { next tc0 at j, yval }
#	yval = i^4 + 0.5 * i^2
#	if (yval < yclip) then { next tc0 at j, yval }

}

# draw the Heirloom curve

xofs = 0
yofs = 0 #0.007
for j from 0.55 to 1.65 by 0.025 do {
	if (j >= 1.0) then { i = (j - 1) * 5 / 3 } else { i = 1 - j }
	next hc at j, i^3
	circle at j+xofs, i^3+yofs radius 0.025
}

# draw the Neatroff curve

if (0) then {
	draw nr dashed 0.02
	nrwslwr = 0
	nrwsupr = 2.00
	xofs = 0
	yofs = 0 #0.007
	for j from 0.55 to 1.65 by 0.025 do {
		if (j < 1.0) then {
			i = (1 - j) / (1.0 - nrwslwr)
		} else {
			 i = (j - 1) / (nrwsupr - 1.0)
		}
#		next nr at j, i^2
		yval = i^2
		if (yval < yclip) then { next nr at j, yval }
		circle at j+xofs, i^2+yofs radius 0.013
	}
}


# raw adjustment ratio

yofs = 0
yu = 0
yl = -0.2
ym = -0.1
lblofs = 0 # -0.03
for i from 0.65 to 1.6 by 0.1 do {
	line from i, yu to i, yu + 0.25 * (yl - yu)
}
for i from 0.6 to 1.6 by 0.1 do {
	line from i, yu to i, yu + 0.42 * (yl - yu)
	sprintf ("%.0f", i * 100) at i, yu + 0.75 * (yl - yu)
}
"Space Size" ljust "Ratio (%) \fIR\fP" at tstart, ym + lblofs


# troff ss units

yu = -0.2
yl = -0.4
ym = -0.3
for i from 7 to 19 by 1 do {
	j = i / 12
	line from j, yu to j, yu + 0.42 * (yl - yu)
	sprintf ("%.0f",i) at j, yu + 0.75 * (yl - yu)
}
"\*[troff] .ss units" ljust at tstart, -0.3+lblofs


# bin classes

b=0
ticklen = 0.05
yu = -0.4
ym = -0.5
yl = -0.6
prevx = xmin
for i from -1.25 to 1.25 by 0.25 do {
	if (i < 0) then {
		xbin = i * 0.3333 + 1
	} else {
		xbin = i * 0.5 + 1
	}
	if (i >= -1.25 && i != 0) then {
		line from xbin, yu to xbin,yl
		if (b > 0) then {
			sprintf("%.0f",b) at (prevx + xbin) / 2, ym + lblofs
		}
		b = b+1
		prevx = xbin
	}
}
"Space Size Bin" ljust at tstart, ym + lblofs

# fitness classes

yu = -0.6
yl = -0.8
ym = (yu+yl)/2

if (normalizedfc == 1) then {
	ld = -0.5 * (1-wslwr) + 1
	lt = -1.0 * (1-wslwr) + 1
	ud = 0.5 * (wsupr-1) + 1
	ul = 1.0 * (wsupr-1) + 1
} else {
	lt = 2 * thresh1 - 1
	ld = thresh1
	ud = thresh2
	ul = 2 * thresh2 - 1
}

line from ld,yu to ld,yl
line from lt,yu to lt,yl
line from ud,yu to ud,yl
line from ul,yu to ul,yl

xt = (lt + ld) / 2
xd = (ld + ud) / 2
xl = (ud + ul) / 2
xv = ul

if (((xv - xmin) / (xmax - xmin)) < 0.84) then {
	xv = (xv + xmax) / 2
} else {
	xv = 0
}
"Fitness Class" ljust at tstart, ym + lblofs
"Tight" at xt, ym + lblofs
"Decent" at xd, ym + lblofs
"Loose" at xl, ym + lblofs
if (xv > 0) then { "Very Loose" at xv, ym + lblofs }

# normalized adjustment ratio

yu = -0.8
yl = -1.0
ym = -0.9
for k from -150 to 150 by 025 do {
	i = k / 100
	if (i < 0) then {
		j = i * (1-wslwr) + 1
	} else {
		j = i * (wsupr-1) + 1
	}
	if (j > xmin && j < xmax) then {
		if ( int(k/50)==k/50) then {
			line from j, yu to j, yu + 0.42 * (yl - yu)
			sprintf ("%.2f", i) at j, yu + 0.8 * (yl - yu) + lblofs
		} else {
			line from j, yu to j, yu + 0.25 * (yl - yu)
		}
	}
}
"Normalized" ljust "Adjust. Ratio \fIr\fP" at tstart, ym  + lblofs

# equations

x1 = 0.85 # 0.75
x2 = x1 + 0.05
x3 = x2 + 0.025
yy = 2.5
ystep = 0.1

circle at x1, 2.5 radius 0.025
circle at (x1+x2)/2, 2.5 radius 0.025
circle at x2, 2.5 radius 0.025
"Heirloom mode" ljust at x3, yy

yy = yy - ystep
# line from x1, 2.4 to x2, 2.4 dotted
line from x1, yy to x2, yy dotted
"$t~=~100 |r| sup 2$" ljust at x3, yy

yy = yy - ystep
# line from x1, 2.3 to x2, 2.3 dashed 0.02
line from x1, yy to x2, yy dashed 0.02
"$t~=~100 |r| sup 3$" ljust at x3, yy

yy = yy - ystep
# line from x1, 2.2 to x2, 2.2 dotted 0.02
line from x1, yy to x2, yy dotted 0.02
"$t~=~100 |r| sup 4$" ljust at x3, yy

# yy = yy - ystep
# line from x1, 2.1 to x2, 2.1 dashed 0.01
# "$t~=~100 |r| sup 5$" ljust at x3, 2.1
## "$t~=~|r| sup 5$ for $|r| >~1.0$ only" ljust at x3, yy

yy = yy - ystep
# line from x1, 2.0 to x2, 2.0 solid
line from x1, yy to x2, yy solid
"$t~=~100 |r| sup 6$" ljust at x3, yy

yy = yy - ystep
#line from x1, 2.0 to x2, 2.0 solid
line from x1, yy to x2, yy dotted 0.02
circle at (x1 + x2) / 2, yy radius 0.01
"$t~=~100 |r| sup 9$" ljust at x3, yy

# line from x1, 1.95 to x2, 1.95 solid
# "$t~=~{( 1 + 100 |r| sup 3 ) sup 2 } over 10000~approx~r sup 6$" ljust at x3, 1.97

.G2

.EQ
.gsize 10.8
.EN

.@Figurecaption "Word space penalty curves"
\!.@Labeli figure:standardpenaltycurves

.@Begin Captiontext above -0.5v
Word space penalty @i[t] graphed as a function of the
normalized space size adjustment ratio @i[r]
for @req[.wscalc] curves 2, 3, 4, 6, and 9;
the desired space size is @req[.ss\~12] and
the preferred word space range is the default, @req[.wrdspc\~66.7\~150],
except for the Heirloom curve, which has an effective range of 0% to 160%.

The table shows the relationships of the raw space size adjustment ratio @i[R],
\*[troff] space size units, space size bins, \*[TeX]'s standard fitness classes,
and the normalized adjustment ratio\~@i[r].  The normalized adjustment ratio is
determined by scaling the raw adjustment ratio @i[R] to the @i[wslwr] and
@i[wsupr] arguments of @req[.wrdspc]; the corresponding penalty is
$t~=~100 | r | sup n$.  The space size bins and \*[TeX] fitness classes are
always related to the raw adjustment ratio @i[R] as shown.
.@End Captiontext
.@End Figure

